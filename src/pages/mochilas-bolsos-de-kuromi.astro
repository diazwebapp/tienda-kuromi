---
import Layout from "../layouts/Layout.astro";
import { mochilas } from "../data/mochilas";
import ProductCard1 from "../components/ProductCard1.astro";
import StyleGridContainer1 from "../components/StyleGridContainer1.astro";
import WithSidebar from "../layouts/WithSidebar.astro";
import { createFullUrlWithSlug } from "../utils/slugCreator";
import type { ProductCollectionSchema, ProductInCollection } from "../utils/schemas";
const title = "mochilas de kuromi";
const description = "Adquiere mochilas de kuromi con la mejor calidad del mundo";
const canonical = createFullUrlWithSlug("mochilas-bolsos-de-kuromi");

//Extraer colores para hacer un filtro
const todosColores = mochilas.map((m) => m.caracteristicas.color);
const aplanarColores: string[] = [];
todosColores.forEach((color) => {
    let colores = color.split(",").map((c) => c.trim());
    aplanarColores.push(...colores);
});

const productsCollection = mochilas.map((m) => {
    let product:ProductInCollection = {
        "@type": "Product",
        name:m.nombre,
        image:m.imagen,
        url:m.refLink,
        offers:{
            "@type":"Offer",
            priceCurrency:"EUR",
            price:m.precio.toString(),
            availability:"https://schema.org/InStock"
        },
        brand:{
            "@type":"Brand",
            name:"Kuromi"
        },
        aggregateRating:{
            "@type":"AggregateRating",
            ratingValue:m.rating.toString(),
            reviewCount:m.ratingCount.toString() 
        } 
    }
    return product;
})


const schemaColection:ProductCollectionSchema={
    "@context":"https://schema.org",
    "@type":"ProductCollection",
    name:"Mochilas de Kuromi",
    description:"Adquiere mochilas de kuromi con la mejor calidad del mundo",
    url:canonical,
    includesObject:productsCollection
}

const schemas = [
    schemaColection
]
const colores = [...new Set(aplanarColores)];
// extraer tama√±os para hacer un filtro

const todasDimenciones = mochilas.map((m) => m.caracteristicas.dimensiones);
const dimenciones = [...new Set(todasDimenciones)];
//Dividimos las mochilas por tematicas
const escolares = mochilas.filter((m) => m.caracteristicas.escolar);
const varias = mochilas.filter((m) => !m.caracteristicas.escolar);
---

<Layout title={title} description={description} filtro canonical={canonical} schemas={schemas}>
    <WithSidebar>
        <aside>
            <form class="filtro" id="filter-box">
                <p>Filtrar</p>
                <fieldset id="dimenciones" >
                    <p>Dimenciones üìè</p>
                    {
                        dimenciones.map((d) => (
                            <label>
                                <input type="radio" name="dimencion"  value={d}/>
                                {d}
                            </label>
                        ))
                    }
                </fieldset>

                <fieldset id="colores" >
                    <p>Por color üé®</p>
                    {
                        colores.map((color) => (
                            <label>
                                <input type="radio" name="color" value={color} />
                                {color}
                            </label>
                        ))
                    }
                </fieldset>
            </form>
        </aside>
        <section>
            <h1>Mochilas de Kuromi: ¬°Encuentra t√∫ estilo ideal!</h1>

            <p>
                Son duraderos y perfectos para cualquier aventura. ¬°Unete al estilo kawai y muestra qui√©n eres en cada lugar! con <strong>mochilas de kuromi</strong>. Nuestros bolsos destacan el estilo √∫nico de Kuromi. Tienen dise√±os coloridos para los ni√±os y opciones √∫tiles para la escuela y el trabajo.

            </p>
        </section>
        <section>
            
            <div class="grid-products2" id="rsFiltrado">

            </div>
            
        </section>
        <section>
            <StyleGridContainer1>
                {
                    varias.map((m) => (
                        <ProductCard1
                            nombre={m.nombre}
                            imagen={m.imagen}
                            precio={m.precio}
                            caracteristicas={m.caracteristicas}
                            rating={m.rating}
                            ratingCount={m.ratingCount}
                            refLink={m.refLink}
                            tienda={m.tienda}
                        />
                    ))
                }
            </StyleGridContainer1>
        </section>
        <section>
            <h2>Lleva el bolso de Kuromi perfecto para t√≠</h2>
            <p>
                ¬øBuscas la mochila ideal para tu d√≠a a d√≠a? ¬°Tenemos el producto adecuado para ti! <br/>
                Tenemos muchos dise√±os. Puedes encontrar estilos casuales y modernos. Tambi√©n hay modelos adorables con peluches de colores vivos.
            </p>
            
        </section>

        <section>
            <h2>Mochila de kuromi escolar: Perfectas para estudiantes</h2>
            <p>
                Para el colegio y universidad: Cada bolso de kuromi escolar
                escolar est√° dise√±ado para ofrecer capacidad adecuada para libros,
                cuadernos y laptops, imagina llevar un ¬°<strong
                    >kuromi de mochila</strong
                >! con dise√±os que te har√°n destacar. Encuentra modelos
                pr√°cticos y resistentes para el d√≠a a d√≠a acad√©mico.
            </p>
            <StyleGridContainer1>
                {
                    escolares.map((m) => (
                        <ProductCard1
                            nombre={m.nombre}
                            imagen={m.imagen}
                            precio={m.precio}
                            caracteristicas={m.caracteristicas}
                            rating={m.rating}
                            ratingCount={m.ratingCount}
                            refLink={m.refLink}
                            tienda={m.tienda}
                        />
                    ))
                }
            </StyleGridContainer1>
        </section>

        <section>
            <h3>Beneficios de las mochilas</h3>
            <p>
                <strong>Dise√±o exclusivo y aut√©ntico</strong>: Tenemos tu mochila de Kuromi original. Capturan la esencia del personaje y
                son perfectos para los fans.<br />
                <strong>Durabilidad superior</strong>: Hechas de poli√©ster
                resistente, nuestros accesorios aguantan el uso diario. Son
                perfectos como bolso de kuromi escolar, juguetes o para tu rutina
                diaria.<br />
                <strong>Pr√°cticas y C√≥modas</strong>: Tienen compartimentos
                inteligentes y de capacidad adecuada. Los cierres son seguros. Las asas son ajustables.
                Por eso, son muy c√≥modas y te ayudan a organizar tus cosas.
            </p>
        </section>

        <section>
            <h2>Cuidados y mantenimiento</h2>
            <p>Prolonga la vida √∫til de tu bolso de Kuromi o mochila con estos sencillos consejos:</p>
            <ul>
                <li>Evita exponer el material a la luz solar directa por per√≠odos prolongados.</li>
                <li>No sobrecargues tu mochila de Kuromi para mantener su forma y evitar da√±os en las costuras.</li>
                <li>Para manchas dif√≠ciles, considera productos de limpieza espec√≠ficos para el material.</li>
            </ul>
        </section>
    </WithSidebar>
</Layout>
<style>
    .grid-products2{
        display:grid;
        grid-template-columns: repeat(auto-fill,minmax(270px,1fr));
        grid-column-start: 2;
        grid-column-end: 3;
        gap:10px;
    }
    
    .filtro {
        background-color: var(--secondary-color);
        padding: 10px;
        overflow: auto;
        max-height: calc(100% - 53px);
        position: fixed;
        left: -70%;
        transition: left 0.5s ease-out;
        z-index: 2;
        min-width: 250px;
        bottom: 53px;
    }
    .filtro > p {
        font-size: 30px;
        font-weight: 500;
    }
    .filtro fieldset {
        border: none;
    }
    .filtro fieldset > p {
        font-size: 24px;
        padding: 10px 0;
    }
    .filtro label {
        display: block;
        padding: 20px 0;
        font-size: 18px;
        cursor: pointer;
    }
    .filtro label:not(:last-child) {
        border-bottom: 1px solid var(--shadowsColor);
    }
    .open-filter {
        left: 0;
    }

    @media (min-width: 916px) {
        .filtro {
            position: relative;
            left: unset;
            width: 100%;
            min-width: unset;
            max-height: unset;
            background-color: transparent;
            padding: 0;
            bottom: unset;
        }
        .filtro fieldset {
            margin: 20px auto;
            background-color: var(--secondary-color);
            padding: 10px;
            border-radius: 10px;
        }

        .filtro label {
            padding: 10px 0;
            font-size: 14px;
        }
        .filtro > p {
            display: none;
        }
        
        aside{
            grid-row-start: 1;
            grid-row-end: 8; 
        }
        section{
            grid-column-start: 2;
            grid-column-end: 3;
        }
    }
</style>
<script>
    const inputsDimenciones = document.getElementsByName("dimencion");
const inputsColores = document.getElementsByName("color");
const cardsProductos = Array.from(document.getElementsByClassName("product-card"));

let allElements: HTMLElement[] = []; 

if (inputsDimenciones.length > 0) {
    for (let i = 0; i < inputsDimenciones.length; i++) {
        inputsDimenciones[i].addEventListener("change", (e) => {
            let input = e.target as HTMLInputElement;
            seleccionaCardsPorDimencion(input.value, true, false);
            updateUI();
        });
    }
}
if (inputsColores.length > 0) {
    for (let i = 0; i < inputsColores.length; i++) {
        inputsColores[i].addEventListener("change", (e) => {
            let input = e.target as HTMLInputElement;
            seleccionaCardsPorDimencion(input.value, false, true);
            updateUI();
        });
    }
}

function seleccionaCardsPorDimencion(search: string, d: boolean, c: boolean) {
    allElements = [];

    if (cardsProductos.length > 0) {
        for (let i = 0; i < cardsProductos.length; i++) {
            const card = cardsProductos[i] as HTMLElement; // Original card
            let shouldAdd = false;

            if (d) { // Filtra por tama√±o
                let dimencion = card.querySelector("small.dimenciones") as HTMLElement;
                if (dimencion?.textContent?.includes(search)) {
                    shouldAdd = true;
                }
            }
            if (c) { // Filtra por color
                let color = card.querySelector("small.colores") as HTMLElement;
                if (color?.textContent?.includes(search)) {
                    shouldAdd = true;
                }
            }

            if (shouldAdd) {
                const clonedCard = card.cloneNode(true) as HTMLElement;
                let exists = allElements.some(existingClonedCard => {
                    return existingClonedCard.textContent === clonedCard.textContent;
                });


                if (!exists) {
                    allElements.push(clonedCard);
                }
            }
        }
    }
}

function updateUI() {
    if ((window as any).rsFiltrado) { 
        (window as any).rsFiltrado.innerHTML = "";

        for (let i = 0; i < allElements.length; i++) {
            (window as any).rsFiltrado.appendChild(allElements[i]);
        }
        
    }
}
</script>