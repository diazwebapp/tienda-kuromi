---
import { createFullUrlWithSlug } from '../utils/slugCreator'
import Footer from '../components/Footer.astro'

type Props={
    title:string
    description:string
    lang?:string
    searchConsoleCode?:string
    canonical?:string
    filtro?:boolean
}

const {title,description,lang="es",searchConsoleCode,canonical,filtro} = Astro.props as Props

const audSlug = createFullUrlWithSlug("audifonos-de-kuromi")
const mocSlug = createFullUrlWithSlug("mochilas-bolsos-de-kuromi")
const pelSlug = createFullUrlWithSlug("peluches-de-kuromi")
const fkSlug = createFullUrlWithSlug("funko-de-kuromi")
---
<!DOCTYPE html>
<html lang={lang}>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/kuromi-cabeza.png" type="image/png">
    <link rel="apple-touch-icon" href="/kuromi-cabeza.png">
    
    <title>{title}</title>
    <meta name="description" content={description}>
    {
        canonical?<link rel="canonical" href={canonical}>:null
    }
    {
        canonical?<meta property="og:url" content={canonical}>:null
    }
    <meta property="og:title" content={title}>
    <meta property="og:description" content={description}>
    
</head>
<body>
    <header>
        <div class="container" style="display: flex;justify-content:space-between;align-items:center;" >
            <a href="/" class="logo">
                <h2 class="site-name" >Kuromi Store</h2>
            </a>
            
            <nav id="app-menu" >
                <a href={mocSlug}>Mochilas de kuromi</a>
                <a href={audSlug}>Audifonos de kuromi</a>
                <a href={pelSlug}>Peluches de kuromi</a>
                </a><a href={fkSlug}>Funko pop de kuromi</a>
            </nav>
            <div class="header-btns">
                {
                    filtro?(
                        <button id="filter-btn">
                            <svg width="30px" height="30px" class="filter-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="current-color" transform="matrix(1, 0, 0, 1, 0, 0)"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill-rule="evenodd" clip-rule="evenodd" d="M15 10.5A3.502 3.502 0 0 0 18.355 8H21a1 1 0 1 0 0-2h-2.645a3.502 3.502 0 0 0-6.71 0H3a1 1 0 0 0 0 2h8.645A3.502 3.502 0 0 0 15 10.5zM3 16a1 1 0 1 0 0 2h2.145a3.502 3.502 0 0 0 6.71 0H21a1 1 0 1 0 0-2h-9.145a3.502 3.502 0 0 0-6.71 0H3z" fill="current-color"></path></g></svg>
                            <span>Filtrar</span>
                        </button>
                    ):null
                }
                <button id="btn-toggle-menu">
                    <label>
                        <input type="checkbox" style="display: none;">
                        <span></span>
                        <span></span>
                        <span></span>
                    </lavel>
                </button>
            </div>
           
        </div>
    </header>
    
    <main> <slot> </main>
    <Footer />
</body>
</html>

<style is:global >
    @view-transition {
    navigation: auto;
}

/* Customize the default animation behavior */



/* Create a custom animation */

@keyframes move-out {
    from {
        transform: translateX(0%);
    }

    to {
        transform: translateX(-100%);
    }
}

@keyframes move-in {
    from {
        transform: translateX(100%);
    }

    to {
        transform: translateX(0%);
    }
}

/* Apply the custom animation to the old and new page states */

::view-transition-old(root) {
    animation: 0.8s ease-in both move-out;

}

::view-transition-new(root) {
    animation: 0.8s ease-in both move-in;
}
    :root{
        --primary-color:#2C2C2C;
        --secondary-color:#fff;
        --decorative-color:#A30057;
        --decorative-color-dark:#8B008B;
    }
    	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	html,
	body {
		font-family: 'Poppins', sans-serif;
		width: 100%;
		background: linear-gradient(135deg, var(--decorative-color) 0%, var(--decorative-color-dark) 100%);
		color: var(--primary-color);
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        scroll-behavior: smooth;
	}
    h1{
        font-size: 30px;
    }
    h2{
        font-size: 24px;
    }
    section h1,section h2,section h3,section h4{
        text-shadow: 1px 1px 5px var(--primary-color);
    }
    .site-name{
        font-size: 18px;
    }
    .site-name::before{
        content: "ðŸŽ€";
    }
    body > header{
        position: sticky;
        bottom:0;
        order: 3;
        background-color: var(--secondary-color);
        z-index: 3;
    }
    body > footer{
        order: 2;
    }
    
    #filter-btn{
        margin-right: 15px;
    }
    #filter-btn svg{
        padding-top:3px;
        fill: var(--primary-color);
    }
    #filter-btn span{
        display: none;
    }
    .header-btns button{
        border:none;
        cursor: pointer;
        background-color: transparent;
    }
    
    #btn-toggle-menu{
        flex-direction: column;
        z-index: 3;
    }
    #btn-toggle-menu:hover span{
        background-color: var(--decorative-color-dark);
    }
    #btn-toggle-menu span{
        background:var(--primary-color);
        width: 30px;
        height: 5px;
        display: block;
        border-radius: 5px;
        margin-bottom: 3px;
    }
    #btn-toggle-menu label{
        cursor: pointer;
    }
    #app-menu{
        position: fixed;
        z-index: 2;
        height: calc(70% - 60px);
        right: -60%;
        bottom:67px;
        transition: right .5s ease-out;
        background-color: var(--secondary-color);
        display: flex;
        flex-direction: column;
        padding: 20px;
        border-radius:7px 0 0 0;
    }
    #app-menu a{
        display: block;
        padding: 10px 0;
        border-bottom: 1px solid var(--primary-color);
    }
    body header:has(input:checked) #app-menu{
        right: 0;
    }
	.container,section,article {
		max-width: 1200px;
		margin: 0 auto;
		padding: 20px 7px;
        width: 100%;
	}
    a{
        text-decoration: none;
        color: var(--primary-color);
    }
    .cta{
        border-radius: 1rem;
        padding: 10px 20px;
        box-shadow: 0px 0px 3px var(--primary-color);
        color: var(--secondary-color);
        background: linear-gradient(90deg,var(--decorative-color) 0%, var(--decorative-color-dark) 100%);
        display: table;
        text-align: center;
        margin: 10px auto;
        font-weight: 600;
        transition: background-color .3s, box-shadow .3s ;
    }
    .cta:hover{
        background-color: var(--decorative-color-dark);
        box-shadow: 0px 1px 3px var(--primary-color);
    }
    @media (min-width: 768px) {
		.container {
			padding: 0 20px;
		}
        body{
            font-size:18px;
        }
        body > header{
            order: 1;
            top: 0;
            padding: 10px 0;
        }
        #app-menu{
            height: calc(100% - 55px);
            bottom: unset;
            top:55px;
        }
        body > main{
            order:2;
        }
        body > footer{
            order:3;
        }
        h1{
            font-size: 40px;
        }
        h2{
            font-size: 32px;
        }
	}
    @media (min-width: 916px){
        #app-menu{
            position: relative;
            top: unset;
            height: unset;
            right: unset;
            flex-direction: row;
            padding: 0;
            height: unset;
        }
        #app-menu a{
            display: unset;
            padding: 0 10px;
            border: unset;
        }
        #app-menu a:hover{
            box-shadow: 0px 1px 0px var(--primary-color) ;
        }
        .header-btns{
            display:none;
        }
    }
</style>
<script is:inline >
    document.addEventListener("DOMContentLoaded",()=>{
        let btnFilter = document.getElementById("filter-btn")
        if(btnFilter){
            let filterBox = document.getElementById("filter-box")
            btnFilter.addEventListener("click",()=>{
                if(filterBox){
                    filterBox.classList.toggle('open-filter')
                }
            })
        }
    })
</script>